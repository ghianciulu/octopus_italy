name: Update Manifest on Release

on:
  release:
    types: [published]

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Version aus Tag extrahieren (ohne führendes 'v')
      - name: Get release version
        id: release_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          CLEAN_VERSION=${VERSION#v}
          echo "VERSION=$CLEAN_VERSION" >> $GITHUB_ENV

       # Extract release version from tag
      #- name: Get release version
      #  id: release_version
      #  run: |
      #    echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      #    echo "Clean version: ${{ env.VERSION }}"

      # Manifest.json aktualisieren
      - name: Update version in manifest
        run: |
          jq --arg ver "${{ env.VERSION }}" '.version = $ver' custom_components/octopus_germany/manifest.json > temp.json
          mv temp.json custom_components/octopus_germany/manifest.json

      # Änderungen committen und pushen
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add custom_components/octopus_germany/manifest.json
          git commit -m "Bump version to ${{ env.VERSION }}"
      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add custom_components/octopus_germany/manifest.json
          git commit -m "Bump version to ${{ env.VERSION }}"

      # Schritt 1: Commit auf den Release-Tag pushen (Tag verschieben)
      - name: Force-push to release tag
        run: |
          git tag -f ${{ github.ref_name }}
          git push origin ${{ github.ref_name }} --force

      # Schritt 2: Commit auch auf main pushen
      - name: Push to main branch
        run: |
          git push origin HEAD:main
